id: CARD-100
title: Add pytest options passthrough and advanced test execution features
epic: Epic 3 â€“ Test Suite Stabilization
sprint: 09-2025_SPRINT_3
status: done  # todo | doing | review | done | blocked
owner: cursor
links: []
acceptance:
  - Code compiles, lints, tests pass
  - Feature behind a flag if risky
  - Update planning/meta/PROJECT_HISTORY.md with log entry
  - Update meta/PROJECT_STATUS.md with one-liner
  - Commit follows Conventional Commits with [CARD-ID]
artifacts: []
notes: |
  **Problem**: Agents need access to pytest's advanced options (verbose output, coverage, markers, etc.) without having to run pytest directly and lose the convenience of dev.sh's environment management.
  
  **Solution**: Add --pytest-args option to dev.sh test command for passing arbitrary pytest options through to pytest.
  
  **Implementation Details**:
  1. Add --pytest-args option to test command argument parsing
  2. Extend run_tests() function to pass through pytest arguments
  3. Support multiple pytest options with proper escaping
  4. Add common pytest options as direct dev.sh options for convenience
  5. Update help documentation with examples
  
  **New Usage Examples**:
  - `./dev.sh test --pytest-args "-v --tb=short"`
  - `./dev.sh test --pytest-args "-m 'not slow' --maxfail=5"`
  - `./dev.sh test --file test_server_management.py --pytest-args "-v --tb=long"`
  - `./dev.sh test --unit --pytest-args "--cov=app --cov-report=html"`
  
  **Common Pytest Options to Add Directly**:
  - `--verbose` or `-v` for verbose output
  - `--quiet` or `-q` for quiet output
  - `--tb=STYLE` for traceback style
  - `--maxfail=NUM` for stopping after N failures
  - `--markers` for showing available markers
  
  **Files to Modify**:
  - dev.sh (main script file)
  - Update show_usage() function with pytest examples
  - Extend run_tests() function to handle pytest args
  - Update argument parsing in main() function
  
  **Technical Requirements**:
  - Properly escape and pass through pytest arguments
  - Support multiple pytest options in single --pytest-args
  - Add validation for common pytest options
  - Maintain compatibility with existing options
  - Provide clear error messages for invalid pytest options
