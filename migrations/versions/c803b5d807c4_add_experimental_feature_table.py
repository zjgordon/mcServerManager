"""Add experimental_feature table

Revision ID: c803b5d807c4
Revises: 43724f018cc4
Create Date: 2025-01-27 10:00:00.000000

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "c803b5d807c4"
down_revision = "43724f018cc4"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Check if table already exists before creating it
    connection = op.get_bind()
    inspector = sa.inspect(connection)
    tables = inspector.get_table_names()

    if "experimental_feature" not in tables:
        op.create_table(
            "experimental_feature",
            sa.Column("id", sa.Integer(), nullable=False),
            sa.Column("feature_key", sa.String(length=100), nullable=False),
            sa.Column("feature_name", sa.String(length=200), nullable=False),
            sa.Column("description", sa.Text(), nullable=False),
            sa.Column("enabled", sa.Boolean(), nullable=False),
            sa.Column("is_stable", sa.Boolean(), nullable=False),
            sa.Column("created_at", sa.DateTime(), nullable=True),
            sa.Column("updated_at", sa.DateTime(), nullable=True),
            sa.Column("updated_by", sa.Integer(), nullable=True),
            sa.ForeignKeyConstraint(
                ["updated_by"],
                ["user.id"],
            ),
            sa.PrimaryKeyConstraint("id"),
            sa.UniqueConstraint("feature_key"),
            sa.CheckConstraint("LENGTH(feature_key) >= 1", name="check_feature_key_length"),
            sa.CheckConstraint("LENGTH(feature_key) <= 100", name="check_feature_key_max_length"),
            sa.CheckConstraint("LENGTH(feature_name) >= 1", name="check_feature_name_length"),
            sa.CheckConstraint("LENGTH(feature_name) <= 200", name="check_feature_name_max_length"),
            sa.CheckConstraint("LENGTH(description) >= 1", name="check_description_length"),
        )

        # Insert the default "Server Management Console" experimental feature
        op.execute(
            """
            INSERT INTO experimental_feature
            (feature_key, feature_name, description, enabled, is_stable, created_at, updated_at)
            VALUES
            ('server_management_console', 'Server Management Console',
             'Enhanced server management interface with advanced controls and monitoring capabilities',
             false, false, datetime('now'), datetime('now'))
            """
        )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("experimental_feature")
    # ### end Alembic commands ###
